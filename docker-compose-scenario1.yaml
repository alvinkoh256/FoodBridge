services:
  # RabbitMQ Service
  rabbitmq:
    image: "rabbitmq:3-management"
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - esd-net
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AMQP Setup Service
  amqp-setup:
    build:
      context: .
      dockerfile: rabbitmq/Dockerfile
    container_name: amqp-setup
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - esd-net
    restart: "no"
  
  websocket:
    build:
      context: ./websocket
      dockerfile: Dockerfile
    image: wongyh01/websocket:1.0
    container_name: websocket
    ports:
      - "5014:5014"
    networks:
      - esd-net
      
  product_listing:
    build:
      context: ./services/atomic/product_listing
      dockerfile: Dockerfile
    image: wongyh01/product_listing:1.0
    container_name: product_listing
    depends_on:
      - websocket
    env_file:
      - .env
    environment:
      - WEBSOCKET_URL=http://websocket:5014
    ports:
      - "5005:5005"
    networks:
      - esd-net
      
  product_validation:
    build:
      context: ./services/atomic/product_validation
      dockerfile: Dockerfile
    image: wongyh01/product_validation:1.0
    container_name: product_validation
    env_file:
      - .env
    ports:
      - "5004:5004"
    networks:
      - esd-net
      
  locating:
    build:
      context: ./services/atomic/locating
      dockerfile: Dockerfile
    image: wongyh01/locating:1.0
    container_name: locating
    env_file:
      - .env
    environment:
      - GRPC_PORT=5006
    ports:
      - "5006:5006"
    networks:
      - esd-net
      
  find_volunteers:
    build:
      context: ./services/composite/findVolunteers
      dockerfile: Dockerfile
    image: wongyh01/find_volunteers:1.0
    container_name: find_volunteers
    depends_on:
      - product_listing
      - product_validation
      - locating
      - amqp-setup
    env_file:
      - .env
    environment:
      - PRODUCT_VALIDATION_URL=http://product_validation:5004
      - PRODUCT_LISTING_URL=http://product_listing:5005
      - LOCATING_SERVICE_URL=locating:5006
      - ACCOUNT_SERVICE_URL=https://personal-tdqpornm.outsystemscloud.com/FoodBridge/rest/AccountInfoAPI
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - SCENARIO12_RABBIT_EXCHANGE=scenario12Exchange
      - SCENARIO12_EXCHANGE_TYPE=fanout
    ports:
      - "5001:5001"
    networks:
      - esd-net

  notify_volunteers:
    build:
      context: ./services/composite/notifyVolunteers
      dockerfile: Dockerfile
    container_name: notify_volunteers
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - SCENARIO12_RABBIT_EXCHANGE=scenario12Exchange
      - SCENARIO12_EXCHANGE_TYPE=fanout
      - SCENARIO2_RABBIT_EXCHANGE=scenario2NotifyExchange
    networks:
      - esd-net

  notification_service:
    build:
      context: ./services/atomic/notification
      dockerfile: Dockerfile
    image: wongyh01/notification_service:1.0
    container_name: notification_service
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
    networks:
      - esd-net

networks:
  esd-net:

volumes:
  rabbitmq_data:
    external: false