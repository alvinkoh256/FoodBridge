networks:
  esd-net:
    driver: bridge

volumes:
  rabbitmq_data:
    external: false

services:
  # RabbitMQ Service
  rabbitmq:
    image: "rabbitmq:3-management"
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - esd-net
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AMQP Setup Service
  amqp-setup:
    build:
      context: .
      dockerfile: rabbitmq/Dockerfile
    container_name: amqp-setup
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - esd-net
    restart: "no"

  # Redis Service
  redis:
    image: redis:6
    restart: always
    ports:
      - 6379:6379
    networks:
      - esd-net

  # Websocket Service
  websocket:
    build:
      context: ./websocket
      dockerfile: Dockerfile
    image: wongyh01/websocket:1.0
    container_name: websocket
    ports:
      - "5014:5014"
    networks:
      - esd-net

  # Hub Service
  hub:
    build:
      context: ./services/atomic/hub
      dockerfile: Dockerfile
    container_name: hub
    ports:
      - 5010:5010
    env_file:
      - .env
    depends_on:
      amqp-setup:
        condition: service_completed_successfully
    networks:
      - esd-net

  # Confirm Delivery Service
  confirm-delivery:
    build:
      context: ./services/composite/confirmDelivery
      dockerfile: Dockerfile
    container_name: confirm-delivery
    ports:
      - 5009:5009
    environment:
      - HUB_SERVICE_URL=http://hub:5010
      - ACCOUNT_SERVICE_URL=https://personal-tdqpornm.outsystemscloud.com/FoodBridge/rest/AccountInfoAPI
      - PRODUCT_LISTING_URL=http://product_listing:5005
    depends_on:
      hub:
        condition: service_started
      amqp-setup:
        condition: service_completed_successfully
    networks:
      - esd-net

  # Reserve Hub Service
  reserve-hub:
    build:
      context: ./services/composite/reserveHub
      dockerfile: Dockerfile
    container_name: reserve-hub
    ports:
      - 5015:5015
    environment:
      - HUB_SERVICE_URL=http://hub:5010
      - ACCOUNT_INFO_API_URL=https://personal-tdqpornm.outsystemscloud.com/FoodBridge/rest/AccountInfoAPI
      - AMQP_HOST=rabbitmq
      - AMQP_PORT=5672
      - AMQP_EXCHANGE=notificationsS3
      - AMQP_EXCHANGE_TYPE=direct
      - AMQP_ROUTING_KEY=reservation
    networks:
      - esd-net
    depends_on:
      - hub
      - rabbitmq

  # Route Service
  route:
    build:
      context: ./services/atomic/route
      dockerfile: Dockerfile
    container_name: route
    ports:
      - 5011:5011
    env_file:
      - .env
    networks:
      - esd-net

  # Get Optimal Route Service
  get-optimal-route:
    build:
      context: ./services/composite/getOptimalRoute
      dockerfile: Dockerfile
    container_name: get-optimal-route
    ports:
      - 5016:5016
    environment:
      - HUB_SERVICE_URL=http://hub:5010
      - ROUTE_SERVICE_URL=http://route:5011
    networks:
      - esd-net
    depends_on:
      - hub
      - route

  # Product Listing Service
  product_listing:
    build:
      context: ./services/atomic/product_listing
      dockerfile: Dockerfile
    image: wongyh01/product_listing:1.0
    container_name: product_listing
    depends_on:
      - websocket
    env_file:
      - .env
    environment:
      - WEBSOCKET_URL=http://websocket:5014
    ports:
      - "5005:5005"
    networks:
      - esd-net

  # Product Validation Service
  product_validation:
    build:
      context: ./services/atomic/product_validation
      dockerfile: Dockerfile
    image: wongyh01/product_validation:1.0
    container_name: product_validation
    env_file:
      - .env
    ports:
      - "5004:5004"
    networks:
      - esd-net

  # Locating Service
  locating:
    build:
      context: ./services/atomic/locating
      dockerfile: Dockerfile
    image: wongyh01/locating:1.0
    container_name: locating
    env_file:
      - .env
    environment:
      - GRPC_PORT=5006
    ports:
      - "5006:5006"
    networks:
      - esd-net

  # Find Volunteers Service
  find_volunteers:
    build:
      context: ./services/composite/findVolunteers
      dockerfile: Dockerfile
    image: wongyh01/find_volunteers:1.0
    container_name: find_volunteers
    depends_on:
      - product_listing
      - product_validation
      - locating
      - amqp-setup
    env_file:
      - .env
    environment:
      - PRODUCT_VALIDATION_URL=http://product_validation:5004
      - PRODUCT_LISTING_URL=http://product_listing:5005
      - LOCATING_SERVICE_URL=locating:5006
      - ACCOUNT_SERVICE_URL=https://personal-tdqpornm.outsystemscloud.com/FoodBridge/rest/AccountInfoAPI
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - SCENARIO12_RABBIT_EXCHANGE=scenario12Exchange
      - SCENARIO12_EXCHANGE_TYPE=fanout
    ports:
      - "5001:5001"
    networks:
      - esd-net

  # Notify Volunteers Service
  notify_volunteers:
    build:
      context: ./services/composite/notifyVolunteers
      dockerfile: Dockerfile
    container_name: notify_volunteers
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - SCENARIO12_RABBIT_EXCHANGE=scenario12Exchange
      - SCENARIO12_EXCHANGE_TYPE=fanout
      - SCENARIO2_RABBIT_EXCHANGE=scenario2NotifyExchange
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CACHE_TTL=1800
    networks:
      - esd-net